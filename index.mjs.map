{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isReadOnly = require( '@stdlib/ndarray-base-assert-is-read-only' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Expands the shape of an array by inserting a new dimension of size one at a specified axis.\n*\n* ## Notes\n*\n* -   A provided axis must reside on the interval `[-N-1, N]`, where `N` is the rank (i.e., number of dimensions) of the provided input array. If provided a negative `axis`, the axis position at which to insert a singleton dimension is computed as `N + axis + 1`. Hence, if provided `-1`, the resolved axis position is `N` (i.e., a singleton dimension is appended to the input array).\n*\n* @param {ndarray} x - input array\n* @param {integer} axis - axis at which to insert a singleton dimension\n* @throws {RangeError} must provide a valid axis\n* @returns {ndarray} output array\n*\n* @example\n* var array = require( '@stdlib/ndarray-array' );\n*\n* var x = array( [ [ 1, 2 ], [ 3, 4 ] ] );\n* // returns <ndarray>\n*\n* var shx = x.shape;\n* // returns [ 2, 2 ]\n*\n* var y = expandDimensions( x, 1 );\n* // returns <ndarray>\n*\n* var shy = y.shape;\n* // returns [ 2, 1, 2 ]\n*\n* var v = y.get( 0, 0, 0 );\n* // returns 1\n*\n* v = y.get( 0, 0, 1 );\n* // returns 2\n*\n* v = y.get( 1, 0, 0 );\n* // returns 3\n*\n* v = y.get( 1, 0, 1 );\n* // returns 4\n*/\nfunction expandDimensions( x, axis ) {\n\tvar strides;\n\tvar shape;\n\tvar ord;\n\tvar sh;\n\tvar st;\n\tvar N;\n\tvar i;\n\n\tsh = x.shape;\n\tst = x.strides;\n\tord = x.order;\n\tN = sh.length;\n\n\tstrides = [];\n\tshape = [];\n\n\tif ( axis < 0 ) {\n\t\tif ( axis < -N-1 ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Specified axis is out-of-bounds. Must be on the interval [-%u-1, %u]. Value: `%d`.', N, N, axis ) );\n\t\t}\n\t\taxis += N + 1;\n\t} else if ( axis > N ) {\n\t\tthrow new RangeError( format( 'invalid argument. Specified axis is out-of-bounds. Must be on the interval [-%u-1, %u]. Value: `%d`.', N, N, axis ) );\n\t}\n\tif ( axis === 0 ) {\n\t\t// Prepend singleton dimension...\n\t\tshape.push( 1 );\n\t\tstrides.push( st[ 0 ] );\n\n\t\t// Copy remaining dimensions...\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tshape.push( sh[ i ] );\n\t\t\tstrides.push( st[ i ] );\n\t\t}\n\t} else if ( axis === N ) {\n\t\t// Copy dimensions...\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tshape.push( sh[ i ] );\n\t\t\tstrides.push( st[ i ] );\n\t\t}\n\t\t// Append singleton dimension...\n\t\tshape.push( 1 );\n\t\tstrides.push( st[ N-1 ] );\n\t} else {\n\t\t// Insert a singleton dimension...\n\t\tfor ( i = 0; i < N+1; i++ ) {\n\t\t\tif ( i === axis ) {\n\t\t\t\tshape.push( 1 );\n\t\t\t\tif ( ord === 'row-major' ) {\n\t\t\t\t\tstrides.push( st[ i-1 ] );\n\t\t\t\t} else { // ord === 'column-major'\n\t\t\t\t\tstrides.push( st[ i ] );\n\t\t\t\t}\n\t\t\t} else if ( i < axis ) {\n\t\t\t\tshape.push( sh[ i ] );\n\t\t\t\tstrides.push( st[ i ] );\n\t\t\t} else { // i > axis\n\t\t\t\tshape.push( sh[ i-1 ] );\n\t\t\t\tstrides.push( st[ i-1 ] );\n\t\t\t}\n\t\t}\n\t}\n\tif ( isReadOnly( x ) ) {\n\t\t// If provided a read-only view, the returned array should also be read-only...\n\t\treturn new x.constructor( x.dtype, x.data, shape, strides, x.offset, x.order, { // eslint-disable-line max-len\n\t\t\t'readonly': true\n\t\t});\n\t}\n\treturn new x.constructor( x.dtype, x.data, shape, strides, x.offset, x.order ); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = expandDimensions;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Expand the shape of an array by inserting a new dimension of size one at a specified axis.\n*\n* @module @stdlib/ndarray-base-expand-dimensions\n*\n* @example\n* var array = require( '@stdlib/ndarray-array' );\n* var expandDimensions = require( '@stdlib/ndarray-base-expand-dimensions' );\n*\n* var x = array( [ [ 1, 2 ], [ 3, 4 ] ] );\n* // returns <ndarray>\n*\n* var shx = x.shape;\n* // returns [ 2, 2 ]\n*\n* var y = expandDimensions( x, 1 );\n* // returns <ndarray>\n*\n* var shy = y.shape;\n* // returns [ 2, 1, 2 ]\n*\n* var v = y.get( 0, 0, 0 );\n* // returns 1\n*\n* v = y.get( 0, 0, 1 );\n* // returns 2\n*\n* v = y.get( 1, 0, 0 );\n* // returns 3\n*\n* v = y.get( 1, 0, 1 );\n* // returns 4\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],"names":["isReadOnly","require$$0","format","require$$1","lib","x","axis","strides","shape","ord","sh","st","N","i","order","length","RangeError","push","constructor","dtype","data","offset","readonly"],"mappings":";;qLAsBA,IAAIA,EAAaC,EACbC,EAASC,EAuHb,ICjFAC,EDMA,SAA2BC,EAAGC,GAC7B,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAUJ,GARAH,EAAKL,EAAEG,MACPG,EAAKN,EAAEE,QACPE,EAAMJ,EAAES,MACRF,EAAIF,EAAGK,OAEPR,EAAU,GACVC,EAAQ,GAEHF,EAAO,EAAI,CACf,GAAKA,GAAQM,EAAE,EACd,MAAM,IAAII,WAAYd,EAAQ,uGAAwGU,EAAGA,EAAGN,IAE7IA,GAAQM,EAAI,OACN,GAAKN,EAAOM,EAClB,MAAM,IAAII,WAAYd,EAAQ,uGAAwGU,EAAGA,EAAGN,IAE7I,GAAc,IAATA,EAMJ,IAJAE,EAAMS,KAAM,GACZV,EAAQU,KAAMN,EAAI,IAGZE,EAAI,EAAGA,EAAID,EAAGC,IACnBL,EAAMS,KAAMP,EAAIG,IAChBN,EAAQU,KAAMN,EAAIE,SAEb,GAAKP,IAASM,EAAI,CAExB,IAAMC,EAAI,EAAGA,EAAID,EAAGC,IACnBL,EAAMS,KAAMP,EAAIG,IAChBN,EAAQU,KAAMN,EAAIE,IAGnBL,EAAMS,KAAM,GACZV,EAAQU,KAAMN,EAAIC,EAAE,SAGpB,IAAMC,EAAI,EAAGA,EAAID,EAAE,EAAGC,IAChBA,IAAMP,GACVE,EAAMS,KAAM,GACC,cAARR,EACJF,EAAQU,KAAMN,EAAIE,EAAE,IAEpBN,EAAQU,KAAMN,EAAIE,KAERA,EAAIP,GACfE,EAAMS,KAAMP,EAAIG,IAChBN,EAAQU,KAAMN,EAAIE,MAElBL,EAAMS,KAAMP,EAAIG,EAAE,IAClBN,EAAQU,KAAMN,EAAIE,EAAE,KAIvB,OAAKb,EAAYK,GAET,IAAIA,EAAEa,YAAab,EAAEc,MAAOd,EAAEe,KAAMZ,EAAOD,EAASF,EAAEgB,OAAQhB,EAAES,MAAO,CAC7EQ,UAAY,IAGP,IAAIjB,EAAEa,YAAab,EAAEc,MAAOd,EAAEe,KAAMZ,EAAOD,EAASF,EAAEgB,OAAQhB,EAAES"}